version: '3'
services:
  app: &app
    container_name: app
    image: ${APP_IMAGE_NAME?Variable not set}:latest
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
    env_file:
      - .env
    ports:
      - 8080:8080
    depends_on:
      - db
      - cache
    command:
      [
        "uvicorn",
        "src.main:app",
        "--host=0.0.0.0",
        "--port=8080",
        "--reload"
      ]

  worker:
    <<: *app
    container_name: worker
    ports: []
    command: [ "python", "./src/main.py" ]

  migration:
    <<: *app
    container_name: migration
    volumes:
      - ./migrations:/app/migrations
    ports: []
    restart: on-failure
    profiles:
      - migration
    command: [ "aerich", "upgrade" ]

  db:
    container_name: db
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${PG_PASSWORD?Variable not set}
      - POSTGRES_DB=${PG_DATABASE?Variable not set}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${PG_EXPOSE:-5432}:5432
    expose:
      - ${PG_EXPOSE:-5432}

  cache:
    container_name: cache
    image: redis:6.2
    restart: unless-stopped
    ports:
      - ${REDIS_EXPOSE:-6379}:6379
    expose:
      - ${REDIS_EXPOSE:-6379}
    command: >
      --requirepass ${REDIS_PASSWORD?Variable not set}
