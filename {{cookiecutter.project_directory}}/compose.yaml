version: '3'
services:
  app:
    container_name: app
    image: ${APP_IMAGE_NAME?Variable not set}:latest
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ${HOST_LOG_PATH:-./logs}:${BIND_LOG_PATH?Variable not set}
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${APP_ENVIRONMENT:-development}
      - SERVER=true
    env_file:
      - .env
    ports:
      - 8888:8000
    expose:
      - 8888
    depends_on:
      - db
      - cache
    command:
      [
        "uvicorn",
        "src.main:app",
        "--host=0.0.0.0",
        "--port=8000",
        "--reload"
      ]

  migration:
    container_name: migration
    image: ${APP_IMAGE_NAME?Variable not set}:latest
    volumes:
      - ./migrations:/app/migrations
      - ./src:/app/src
    environment:
      - ENVIRONMENT=${APP_ENVIRONMENT?Variable not set}
    env_file:
      - .env
    depends_on:
      - db
    profiles:
      - migration
    command: [ "aerich", "upgrade" ]

  worker:
    container_name: worker
    image: ${APP_IMAGE_NAME?Variable not set}:latest
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ${HOST_LOG_PATH:-./logs}:${BIND_LOG_PATH?Variable not set}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${APP_ENVIRONMENT?Variable not set}
      - APP_NAME=${APP_NAME}-worker
      # - WORKER=true
    depends_on:
      - cache
    command: [ "python", "./src/main.py" ]

  db:
    container_name: db
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${PG_PASSWORD?Variable not set}
      - POSTGRES_DB=${PG_DATABASE?Variable not set}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${PG_EXPOSE:-5432}:5432
    expose:
      - ${PG_EXPOSE:-5432}

  cache:
    container_name: cache
    image: redis:6.2
    restart: unless-stopped
    ports:
      - ${REDIS_EXPOSE:-6379}:6379
    expose:
      - ${REDIS_EXPOSE:-6379}
    command: >
      --requirepass ${REDIS_PASSWORD?Variable not set}
