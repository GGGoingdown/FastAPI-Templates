name: CI

on:
    push:
        branches:
        - main
        - develop
jobs:
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
            - 5432:5432

      cache:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Opens tcp port 6379 on the host and service container
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Install packages
      run: sudo apt-get install -y libglib2.0-0

    - name: Load environment file
      uses: xom9ikk/dotenv@v2
      with:
        mode: test
        load-mode: strict

      # Add steps to install PDM and dependencies...
    - name: Setup PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: '3.10'
        cache: true

    # You are now able to use PDM in your workflow
    - name: Install dependencies
      run: pdm install

    - name: Run tests
      env:
        REDIS_DSN: "redis://${{ env.REDIS_HOST }}:${{ env.REDIS_PORT }}/0"
        PG_DSN: "postgres://${{ env.PG_USERNAME }}:${{ env.PG_PASSWORD }}@${{ env.PG_HOST }}:${{ env.PG_PORT }}/${{ env.PG_DATABASE }}"
      run: |
        pdm run pytest -v -s -p no:warnings
